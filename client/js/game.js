var socket = io.connect('http://localhost:8080');
var board = new Board();
var player = new Player();

var enemies = {};

socket.on('createBoard', function(tiles, tileDimension) {
	board.instantiate($('body'), tiles, tileDimension);
});

socket.on('updateClientEnemies', function(enemyPlayers) {
  for (var enemy in enemyPlayers) {
  	if (enemyPlayers[enemy].username !== player.$player.attr('username')) {
  		if ($('div[username="' + enemyPlayers[enemy].username + '"]').length) {
  			enemies[enemyPlayers[enemy].username].move(enemyPlayers[enemy].tile, board);
  		} else {
  			newEnemy = new Enemy();
  			newEnemy.instantiate(enemyPlayers[enemy].username, enemyPlayers[enemy].tile, board);
  			enemies[enemyPlayers[enemy].username] = newEnemy;
  		}
  	}
  }
});


function loginPrompt() {
	player.instantiate($('.login-container div input').val(), board);
	enableMovement();
	$('.login-container').remove();
}

function enableMovement() {
	$('.tile').click(function(e) {
		player.move(Number($(this).attr('x')), Number($(this).attr('y')), board)
	});
}




















// function joinGame() {
// 	// Pass username to player creation
// 	createPlayer($('.login-container div input').val());
// 	// Remove the login elements, player is now in the game
// 	$('.login-container').remove();

// 	// gather parent info so we can update the server
// 	var parentInfo = {
// 		pos: {
// 			x: $player.parent().attr('x'),
// 			y: $player.parent().attr('y')
// 		},
// 		color: $player.parent().prop('className').split(' ')[0].replace('color-', ''), //HAS TO BE A CLEANER WAY
// 		tile: Number($player.parent().attr('tile'))
// 	};

// 	// Pass player information to the server
// 	socket.emit('playerJoinedGame', $player.attr('username'), parentInfo);
// }

// function movePlayer(direction) {
// 	direction = getDestination(direction);
// 	$player.animate(direction, {
//    duration: 1000,
//    complete: function() {
//    	updatePlayerParent(direction);
//    }
//  });
// }

// function updatePlayerParent(direction) {
// 	var newPosition;

// 	if (direction.top) {
// 		if (direction.top.substring(0,1) === '-') {
// 			newPosition = {pos: {x:Number($player.parent().attr('x')) - 1, y:Number($player.parent().attr('y'))}};
// 		} else {
// 			newPosition = {pos: {x:$player.attr('x') + 1, y:$player.attr('y')}};
// 		}
// 	}
// 	console.log($('.tile')[newPosition.pos.x + newPosition.pos.y]);
// 	// $player.appendTo($('.tile')[newPosition.pos.x * 50, newPosition.pos.y * 50])
// }

// function getDestination(direction) {
// 	var playerParentX = $player.parent().attr('x');
// 	var playerParentY = $player.parent().attr('y');

// 	var movement = {};

// 	// if (direction.pos.x === playerParentX) {
// 	// 	movement.direction = direction.pos.y < playerParentY ? { left: '-=50' } : { left: '+=50' };
// 	// } 

// 	if (direction.pos.y === playerParentY) {
// 		movement =  direction.pos.x < playerParentX ? { top: '-=50' } : { top: '+=50' };
// 	}

// 	return movement;
// }

// function createPlayer(username) {
// 	// Create player element
// 	$player = $('<div class="player" username="' + username + '" moving="false"></div>');
// 	// Add player to random tile
// 	$($('.tile')[Math.floor(Math.random() * $('.tile').length)]).append($player);
// }

// function createBoard(tiles) {
// 	// Tiles parameter contains all the board tile information generated by the server
// 	for (var tile in tiles) {
// 		// Add the tile to our game board
// 		placeTile(tiles[tile].pos.x, tiles[tile].pos.y, tiles[tile].color);
// 	}

// 	$('.tile').click(function(e) {
// 		var direction = { pos: { x: $(this).attr('x'), y: $(this).attr('y')}};

// 		if (!!$player.attr('moving')) {
// 			$player.attr('moving', true);
// 			movePlayer(direction);
// 		}
// 	});
// }

// function placeTile(x, y, color) {
// 	// Create tile, x, y and color attributes will be manipulated by the server to trigger client events
// 	var $tile = $('<div tile="' + $('.tile').length + '" x="' + x + '" y="' + y + '"class="color-' + color + ' tile"></div>');
// 	// DEBUG: Help identify tile positions
// 	// $tile.append('<span>' + x + ' : ' + y + '</span>');
// 	// Append tile to gameboard, .tile is set to float left within the board dimension
// 	$('#game').append($tile);
// }
